// Extended project information. Edit these values!
ext.projectName = 'SmartCCraft'
ext.author = 'hitech95'
ext.authorUrl = 'https://github.com/hitech95'
ext.inceptionYear = '2015'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
    }
}


apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'forge'
apply plugin: 'idea' // Helper plugin for IDE
apply plugin: 'license'

version = "1.7.10-1.0"
group = "it.kytech.smartccraft" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "smartccraft"

repositories {
    maven { // the repo from which to get NEI and stuff
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
}
dependencies {
    compile('mcp.mobius.waila:Waila:1.5.11-RC2-NONEI_1.7.10') {
        exclude group: 'mcp.mobius.waila'
    }
    /*
    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.136:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.6.43:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.4.105:dev"*/
}

minecraft {
    version = "1.7.10-10.13.4.1448-1.7.10" //MC Version & Forge Version

    replaceIn "reference/Reference.java"
    replace "@MOD_VERSION@", "${project.version}.${System.getenv("BUILD_NUMBER") ?: 0}"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// Configure license headers
license {
    ext.name = rootProject.projectName
    ext.author = rootProject.author
    ext.url = rootProject.authorUrl
    ext.year = rootProject.inceptionYear

    header rootProject.file('HEADER')

    mapping {
        java = 'JAVADOC_STYLE'
    }
}

task devJar(type: Jar, dependsOn: 'classes') {

    from(sourceSets.main.output) {
        include '**'
    }

    extension = 'jar'
    classifier = 'dev'
}

artifacts {
    archives devJar
}
